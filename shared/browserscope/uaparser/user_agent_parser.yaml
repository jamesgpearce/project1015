user_agent_parsers:
  #### SPECIAL CASES TOP ####

  # must go before Opera
  - regex: '^(Opera)/(\d+)\.(\d+) \(Nintendo Wii'
    family_replacement: 'Wii'

  # must go before Firefox to catch SeaMonkey.
  - regex: '(SeaMonkey|Fennec|Camino)/(\d+)\.(\d+)\.?([ab]?\d+[a-z]*)'

  # must go before Firefox

  # must go before Browser/major_version.minor_version - eg: Minefield/3.1a1pre
  - regex: '(Namoroka|Shiretoko|Minefield)/(\d+)\.(\d+)\.(\d+(?:pre)?)'
    family_replacement: 'Firefox ($1)'

  - regex: '(Firefox)/(\d+)\.(\d+)([ab]\d+[a-z]*)'
    family_replacement: 'Firefox Beta'

  - regex: '(Firefox)-(?:\d+\.\d+)?/(\d+)\.(\d+)([ab]\d+[a-z]*)'
    family_replacement: 'Firefox Beta'

  - regex: '(Namoroka|Shiretoko|Minefield)/(\d+)\.(\d+)([ab]\d+[a-z]*)?'
    family_replacement: 'Firefox ($1)'

  - regex: '(Firefox).*Tablet browser (\d+)\.(\d+)\.(\d+)'
    family_replacement: 'MicroB'

  - regex: '(MozillaDeveloperPreview)/(\d+)\.(\d+)([ab]\d+[a-z]*)?'

  # e.g.: Flock/2.0b2
  - regex: '(Flock)/(\d+)\.(\d+)(b\d+?)'

  # RockMelt
  - regex: '(RockMelt)/(\d+)\.(\d+)\.(\d+)'

  # e.g.: Fennec/0.9pre
  - regex: '(Fennec)/(\d+)\.(\d+)(pre)'

  - regex: '(Navigator)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Netscape'

  - regex: '(Navigator)/(\d+)\.(\d+)([ab]\d+)'
    family_replacement: 'Netscape'

  - regex: '(Netscape6)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Netscape'

  - regex: '(MyIBrow)/(\d+)\.(\d+)'
    family_replacement: 'My Internet Browser'

  # Opera will stop at 9.80 and hide the real version in the Version string.
  # see: http://dev.opera.com/articles/view/opera-ua-string-changes/
  - regex: '(Opera Tablet).*Version\/(\d+)\.(\d+)(?:\.(\d+))?'

  - regex: '(Opera)/.+Opera Mobi.+Version/(\d+)\.(\d+)'
    family_replacement: 'Opera Mobile'

  - regex: '(Opera Mini)/(\d+)\.(\d+)'

  - regex: '(Opera)/9.80.*Version\/(\d+)\.(\d+)(?:\.(\d+))?'

  # Palm WebOS looks a lot like Safari.
  - regex: '(webOS)/(\d+)\.(\d+)'
    family_replacement: 'Palm webOS'

  # LuaKit has no version info.
  # http://luakit.org/projects/luakit/
  - regex: '(luakit)'
    family_replacement: 'LuaKit'

  # Lightning (for Thunderbird)
  # http://www.mozilla.org/projects/calendar/lightning/
  - regex: '(Lightning)/(\d+)\.(\d+)([ab]?\d+[a-z]*)'

  # Swiftfox
  - regex: '(Firefox)/(\d+)\.(\d+)\.(\d+(?:pre)?) \(Swiftfox\)'
    family_replacement: 'Swiftfox'
  - regex: '(Firefox)/(\d+)\.(\d+)([ab]\d+[a-z]*)? \(Swiftfox\)'
    family_replacement: 'Swiftfox'

  # Rekonq
  - regex: 'rekonq'
    family_replacement: 'Rekonq'

  # Conkeror lowercase/uppercase
  # http://conkeror.org/
  - regex: '(conkeror|Conkeror)/(\d+)\.(\d+)\.?(\d+)?'
    family_replacement: 'Conkeror'

  # catches lower case konqueror
  - regex: '(konqueror)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Konqueror'

  - regex: '(PlayBook).+RIM Tablet OS (\d+)\.(\d+)\.(\d+)'

  - regex: '(WeTab)-Browser'

  - regex: '(wOSBrowser).+TouchPad/(\d+)\.(\d+)'
    family_replacement: 'webOS TouchPad'

  - regex: '(Comodo_Dragon)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Comodo Dragon'

  # YottaaMonitor bot
  - regex: '(YottaaMonitor)'

  # must go before NetFront below
  - regex: '(Kindle)/(\d+)\.(\d+)'

  #### END SPECIAL CASES TOP ####

  #### MAIN CASES - this catches > 50% of all browsers ####

  # Browser/major_version.minor_version.beta_version
  - regex: '(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Vodafone|NetFront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris)/(\d+)\.(\d+)\.(\d+)'

  # Browser/major_version.minor_version
  - regex: '(Bolt|Jasmine|IEMobile|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|Vodafone|NetFront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT)/(\d+)\.(\d+)'

  # Browser major_version.minor_version.beta_version (space instead of slash)
  - regex: '(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\d+)\.(\d+)\.(\d+)'
  # Browser major_version.minor_version (space instead of slash)
  - regex: '(iCab|Lunascape|Opera|Android) (\d+)\.(\d+)\.?(\d+)?'

  - regex: '(IEMobile) (\d+)\.(\d+)'
    family_replacement: 'IE Mobile'

  # AFTER THE EDGE CASES ABOVE!
  - regex: '(Firefox)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Firefox)/(\d+)\.(\d+)(pre|[ab]\d+[a-z]*)?'
  #### END MAIN CASES ####

  #### SPECIAL CASES ####
  - regex: '(Obigo|OBIGO)[^\d]*(\d+)(?:.(\d+))?'
    family_replacement: 'Obigo'

  - regex: '(MAXTHON|Maxthon) (\d+)\.(\d+)'
    family_replacement: 'Maxthon'

  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'
    major_version_replacement: '0'

  - regex: '(PLAYSTATION) (\d+)'
    family_replacement: 'PlayStation'

  - regex: '(PlayStation Portable)[^\d]+(\d+).(\d+)'

  - regex: '(BrowseX) \((\d+)\.(\d+)\.(\d+)'

  - regex: '(POLARIS)/(\d+)\.(\d+)'
    family_replacement: 'Polaris'

  - regex: '(BonEcho)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Bon Echo'

  - regex: '(iPod).+Version/(\d+)\.(\d+)\.(\d+)'

  - regex: '(iPhone) OS (\d+)_(\d+)(?:_(\d+))?'

  - regex: '(iPad).+ OS (\d+)_(\d+)(?:_(\d+))?'

  - regex: '(Avant)'
    major_version_replacement: '1'

  - regex: '(Nokia)[EN]?(\d+)'

  # BlackBerry devices
  - regex: '(Black[bB]erry).+Version\/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Blackberry'

  - regex: '(Black[bB]erry)\s?(\d+)'
    family_replacement: 'Blackberry'

  - regex: '(OmniWeb)/v(\d+)\.(\d+)'

  - regex: '(Blazer)/(\d+)\.(\d+)'
    family_replacement: 'Palm Blazer'

  - regex: '(Pre)/(\d+)\.(\d+)'
    family_replacement: 'Palm Pre'

  - regex: '(Links) \((\d+)\.(\d+)'

  - regex: '(QtWeb) Internet Browser/(\d+)\.(\d+)'

  #- regex: '\(iPad;.+(Version)/(\d+)\.(\d+)(?:\.(\d+))?.*Safari/'
  #  family_replacement: 'iPad'

  # Safari
  - regex: '(Version)/(\d+)\.(\d+)(?:\.(\d+))?.*Safari/'
    family_replacement: 'Safari'
  # Safari didn't provide "Version/d.d.d" prior to 3.0
  - regex: '(Safari)/\d+'

  - regex: '(OLPC)/Update(\d+)\.(\d+)'

  - regex: '(OLPC)/Update()\.(\d+)'
    major_version_replacement: '0'

  - regex: '(SamsungSGHi560)'
    family_replacement: 'Samsung SGHi560'

  - regex: '^(SonyEricssonK800i)'
    family_replacement: 'Sony Ericsson K800i'

  - regex: '(Teleca Q7)'

  - regex: '(MSIE) (\d+)\.(\d+)'
    family_replacement: 'IE'


os_parsers:
  - regex: '(Android)'
  - regex: '(Windows)'
  - regex: '(iPad)'
  - regex: '(iPhone OS) ([\d_]+)'
    os_replacement: 'iOS'
  - regex: '(Mac OS X)'
  - regex: '(FreeBSD)'
  - regex: '(iPod)'
  - regex: '(iPhone Simulator)'
  - regex: '(Linux)'

product_parsers:
  - regex: '(iPhone)'